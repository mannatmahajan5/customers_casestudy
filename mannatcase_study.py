# -*- coding: utf-8 -*-
"""MannatCASE-STUDY.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/189pV_xETP3d1TBoaCZXPPueaJm2XUzb8
"""

import seaborn as sns
import matplotlib.pyplot as plt
import pandas as pd

df=pd.read_csv('/content/(Mannat)customers-100.csv')
display(df.head())

# prompt: graph for distribution of phone 1 take 10 entries

phone_counts = df['Phone 1'].value_counts().head(10)
plt.figure(figsize=(10, 5))
sns.barplot(x=phone_counts.index, y=phone_counts.values)
plt.title('Distribution of Phone 1 (Top 10)')
plt.xlabel('Phone Number')
plt.ylabel('Count')
plt.xticks(rotation=45, ha='right')
plt.show()

# prompt: relationship between country and company scatter plot take upto only 10 entries

df_subset = df[['Country', 'Company']].head(10)

plt.figure(figsize=(10, 6))
sns.scatterplot(x='Country', y='Company', data=df_subset)
plt.title('Relationship between Country and Company (First 10 Entries)')
plt.xlabel('Country')
plt.ylabel('Company')
plt.xticks(rotation=45, ha='right')  # Rotate x-axis labels if needed
plt.show()

# prompt: create different types of graph on top 10 entries on this dataset for different columns

def create_graphs(df, column_name, graph_type='bar'):

  top_10 = df[column_name].value_counts().head(10)

  plt.figure(figsize=(10, 6))

  if graph_type == 'bar':
    sns.barplot(x=top_10.index, y=top_10.values)
    plt.title(f'Distribution of {column_name} (Top 10)')
    plt.xlabel(column_name)
    plt.ylabel('Count')
    plt.xticks(rotation=45, ha='right')
  elif graph_type == 'pie':
    plt.pie(top_10.values, labels=top_10.index, autopct='%1.1f%%', startangle=90)
    plt.title(f'Top 10 {column_name} Distribution')
  elif graph_type == 'line':
    plt.plot(top_10.index, top_10.values)
    plt.title(f'Top 10 {column_name} Trend')
    plt.xlabel(column_name)
    plt.ylabel('Count')
    plt.xticks(rotation=45, ha='right')
  elif graph_type == 'scatter':
    # For scatter plots, we need two columns. Let's use 'Company' as the other column.
    if 'Company' in df.columns:
      df_subset = df[[column_name, 'Company']].head(10)
      sns.scatterplot(x=column_name, y='Company', data=df_subset)
      plt.title(f'Relationship between {column_name} and Company (Top 10)')
      plt.xlabel(column_name)
      plt.ylabel('Company')
      plt.xticks(rotation=45, ha='right')

  plt.show()


# Example usage for different columns and graph types:
create_graphs(df, 'Country', graph_type='bar')
create_graphs(df, 'Company', graph_type='pie')
create_graphs(df, 'Phone 1', graph_type='line')
create_graphs(df, 'City', graph_type='scatter')

# You can add more columns and graph types as needed